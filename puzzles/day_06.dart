import 'dart:collection';
import 'dart:math';

import '../core/daily_challenge.dart';

typedef GuardMap = SplayTreeMap<int, SplayTreeMap<int, String>>;

/// Conditions of the puzzle [https://adventofcode.com/2024/day/6]
final class GuardGallivant implements DailyChallenge {
  /// initialize input ordering rules
  static GuardMap _parseToMap(String src) {
    final linesRaw = src.split('\n');

    final map = GuardMap();
    for (int y = 0; y < linesRaw.length; y++) {
      final lineRaw = linesRaw[y].trim();
      if (lineRaw.isEmpty) continue;
      final pointsRaw = lineRaw.split('');
      final points = SplayTreeMap<int, String>();
      for (int x = 0; x < pointsRaw.length; x++) {
        final pointRaw = pointsRaw[x].trim();
        if (pointRaw.isEmpty) continue;
        points.update(x, (_) => pointRaw, ifAbsent: () => pointRaw);
      }
      map.update(y, (_) => points, ifAbsent: () => points);
    }

    return map;
  }

  static Point<int> _findInitialPosition(String src) {
    final linesRaw = src.split('\n');
    for (int y = 0; y < linesRaw.length; y++) {
      final lineRaw = linesRaw[y].trim();
      if (lineRaw.isEmpty) continue;
      if (!lineRaw.contains('^')) continue;
      return Point(lineRaw.indexOf('^'), y);
    }
    throw UnsupportedError('Missed ^-symbol');
  }

  /// Solving the part one of the puzzle
  int solvePuzzlePartOne() {
    final map = _parseToMap(initialMap);
    final initialPosition = _findInitialPosition(initialMap);
    final mapArea = Rectangle(0, 0, map.values.first.length, map.values.length);

    Point<int> position = initialPosition;
    Direction direction = Direction.up;
    int i = 1;
    outerLoop:
    while (mapArea.containsPoint(position)) {
      final scan = position.nextPosition(direction);
      switch (map.getSymbol(scan)) {
        case '': // -jumped out
          break outerLoop;

        case '#': // -obstacle
          direction = direction.nextDirection();

        default: // -free way
          map.markAsVisited(position);
          position = position.nextPosition(direction);
          if (map.isNotVisited(position)) i++;
          map.markNewPositionAsVisited(position);
      }
    }
    return i;
  }

  /// Solving the part two of the puzzle
  int solvePuzzlePartTwo() {
    final map = _parseToMap(initialMap);
    final initialPosition = _findInitialPosition(initialMap);
    final mapArea = Rectangle(0, 0, map.values.first.length, map.values.length);

    Point<int> position = initialPosition;
    Direction direction = Direction.up;
    final variants = <Point<int>>{};
    outerLoop:
    while (mapArea.containsPoint(position)) {
      final scan = position.nextPosition(direction);
      switch (map.getSymbol(scan)) {
        case '': // -jumped out
          break outerLoop;

        case '#': // -obstacle
          direction = direction.nextDirection();

        default: // -free way
          final variant = _checkForInstallingObstacleLocation(
              map, mapArea, position, direction);
          if (variant != null) variants.add(variant);
          position = position.nextPosition(direction);
      }
    }
    variants.remove(initialPosition);
    return variants.length;
  }

  Point<int>? _checkForInstallingObstacleLocation(
    GuardMap map,
    Rectangle searchField,
    Point<int> initPosition,
    Direction initDirection,
  ) {
    final obstaclePosition = _getObstaclePosition(
      map: map,
      searchField: searchField,
      initPosition: initPosition,
      initDirection: initDirection,
    );

    if (obstaclePosition == null) return null;

    final isReachable = _checkReachability(
      map: map,
      searchField: searchField,
      obstaclePosition: obstaclePosition,
      beforeObstaclePosition: initPosition,
    );

    return isReachable ? obstaclePosition : null;
  }

  Point<int>? _getObstaclePosition({
    required GuardMap map,
    required Rectangle searchField,
    required Point<int> initPosition,
    required Direction initDirection,
  }) {
    final obstaclePos = initPosition.nextPosition(initDirection);
    Point<int> position = initPosition;
    Direction direction = initDirection.nextDirection();
    final turnPoints = <(Point, Direction)>[(initPosition, initDirection)];
    while (searchField.containsPoint(position)) {
      final scan = position.nextPosition(direction);
      switch (_getSymbolIncludingVirtualObstacle(map, obstaclePos, scan)) {
        case '': // -jumped out
          return null;

        case '#': // -obstacle
          if (turnPoints.contains((position, direction))) return obstaclePos;
          turnPoints.add((position, direction));
          direction = direction.nextDirection();
          if (turnPoints.length > 100000000) return obstaclePos;

        default: // -free way
          position = position.nextPosition(direction);
      }
    }

    return null;
  }

  String _getSymbolIncludingVirtualObstacle(
    GuardMap map,
    Point<int> obstaclePoint,
    Point<int> point,
  ) {
    if (point == obstaclePoint) return '#';
    return map.getSymbol(point);
  }

  bool _checkReachability({
    required GuardMap map,
    required Rectangle searchField,
    required Point<int> obstaclePosition,
    required Point<int> beforeObstaclePosition,
  }) {
    Point<int> position = _findInitialPosition(initialMap);
    Direction direction = Direction.up;

    while (searchField.containsPoint(position)) {
      final scan = position.nextPosition(direction);
      if (scan == obstaclePosition) return position == beforeObstaclePosition;
      switch (map.getSymbol(scan)) {
        case '#': // -obstacle
          direction = direction.nextDirection();

        default: // -free way
          position = position.nextPosition(direction);
      }
    }
    return false;
  }
}

enum Direction {
  up,
  right,
  down,
  left,
}

extension DirectionExt on Direction {
  /// Change direction
  Direction nextDirection() => switch (this) {
        Direction.up => Direction.right,
        Direction.right => Direction.down,
        Direction.down => Direction.left,
        Direction.left => Direction.up,
      };
}

extension PointExt on Point<int> {
  /// Change position
  Point<int> nextPosition(Direction direction) => switch (direction) {
        Direction.up => Point(this.x, this.y - 1),
        Direction.right => Point(this.x + 1, this.y),
        Direction.down => Point(this.x, this.y + 1),
        Direction.left => Point(this.x - 1, this.y),
      };
}

extension MapExt on GuardMap {
  /// Get symbol on position
  String getSymbol(Point<int> point) {
    return this[point.y]?[point.x] ?? '';
  }

  /// Get symbol on position
  void markAsVisited(Point<int> point) {
    this[point.y]?[point.x] = 'V';
  }

  /// Get symbol on position
  void markNewPositionAsVisited(Point<int> point) {
    this[point.y]?[point.x] = 'P';
  }

  bool isNotVisited(Point<int> point) {
    return this[point.y]?[point.x] != 'V';
  }
}

const String initialMap =
    '''.........................................#.....#..##.....................#...........................#.....................#....#.
..................#................................#..#.................................#................#........................
.....##.........#..#........#......#............#.....#..................#............................#...#...#..#...#............
#..#...#....#...#.................................#.........................................#...............................#.....
.................##...................................................#.........................#....................#............
.............#.............#...................#...................#..................................#....#..#........#....#.....
..#.........................................................................................##....#.................#.............
...........#.........#.....#..#.................#...........##..........#....#....................................#........#.#....
#...#.........................................#..........................................................#........................
.............................................#................................#...............................##..........#.......
......#....#..............#..........................................#....#........................#...................##....#....
........#.#..............................#..#.............#.......#............................................................#..
....#...............#...#..#......#...........................#........................#...........#...#...................#......
..........................#...........##....#.......................................#..........................#.#................
....................#.........................................................#........#..........................................
..............#.............#.##.............#.........#..........#.......................................#...#.........#..#......
...............................................................#..........#........#.........#.............#.............#........
............#.................#...................#....#......................................................................#...
.......#....##....#......##.........#...........................................#....................................#.........#..
......#...#......................#............................##....##....................#.......................................
...................................##....................#.............................#........................#.................
..........................#.#.........................#..........................................................#................
.............#...#..........................................................#..#.#.#.....#....#.....#...................#........#
....#......#.............#...#......#.........#............##..................#.......................#..........................
.......................#.....#...................................#..........................#.....................................
#.....##....................................#.....#.....................................................#....#....................
............#...#...................................................................#.........#......................#............
................#....................................#.....#.........#.........#..............#...................................
..........................................................................................#.....#.#...#.........#.......#.........
#.............#..............................................#...#.#..#.....................#...#............#.#...#..............
..........................................#..................................................................#...#................
.........#.............................................#................................#.................#.....#................#
........................................................................................#.......#.....#..........#..........#.....
...........................#.......#......#..........#............#...............#........#...#......#...........................
...##...................#.................................#..................................##...................................
........................................................#.#.#.....#............................##................#................
......................................#....................#..................#...#.............................#...........#.....
.............................#...#.................#.............................#..............#.................................
#.....................................................................................................................#..#.....#..
...........................#..............................................#................................#....................#.
......#..................##................#....................#.............................................................#..#
.................#....................................................................................#...........................
....#.#..................................#..#........................##...#.............................#..............#..........
...............................................................................................................#...#.....#........
..#...................#.......................#........................................................................#..........
..#............#......................................###.........#..............................#..........#.................#...
.................................#..........................................................................#............#........
......................#...#...............#..............................#.......#........................#...........#........#..
..#..................#............................................................................#......#........................
..........................................................................#....#........#...................#.............#.......
..............#.........#.#............................................................................................#..........
........................#...#............................................#..............................#.........................
.........................................#...................................................#........................#...........
...#.................................................#..........#.............................#.....#.#.........#.................
............................#...........#...............................................................#........................#
..........................#..#..................#....................................#..................#.......................#.
......#...................#..............................#........#.##..........................................................#.
...........................#.....#.............................................................................#..................
..............#........................................................#.#.......#...#................#....#......................
...#...#..........................................................................................................................
..........##.....................#.#.............#...............................#.........................................#......
.#.#...................#.................................#.................................................#....#.................
........................#..............................................................................................#.......#..
...#....................................................................................................#.....##.....#............
.............#........................#.....................................................#.............#....................#.#
#........................................................................................#.....#..................................
........#..............#...............................#.......#...................................#..........#...................
.....................#.........................#.......#.......#.....#...........................................................#
...............#.....................................................................#..........#.................................
.................................#....#..........#..............................#...........#............................#........
..............#......#.........#...#.............#.......................#....#...................................................
...........................................................^.......................................................#..............
..........#...............................#.........................#.....................................................#.....#.
.##.....................#....................#.....#.......................................................#..##...#..........#...
.......................#...........#..#.#.....................................................#....................#..............
..................................................................#......#.............#..................................#.......
.#............................................#........................#...................................#.........#............
..................................................................................#.##.........................#..................
................#........#...........................................#...................................#........................
...............#........#....#...................#................................#........#.....#..........#.................#...
.....#.............................#..........................................................................................#...
............#..............#.....#........................................#............#............##..........#.................
........................................................................................#..........................#........##....
..#............................#...#.................................#....#..............#........................................
...#.....................#...........................................................................#.....................#......
....#.........................#.............#..................................#.........#..............#.........................
.....................#...................................................................................#..#......#..............
.....#.................................#...............................#.....#..........#.........................................
............#........#..........#....................#....................#..#.#.....................................#............
........................................#......#......................#......................................#..#.......#.........
...#...........#...............#.................#.............................................#..........#...#...................
.......#....##..............................#......#.......................#..................#..........#.................#...#..
.................................##...........................................................#....#..........#.#........#........
..................................#....##..#..#.......#............................#............#.#........................#......
..........................................#.....................................#.............##...#............#.................
....#....................#................................#....#..#.....................#................#...#..#..#..............
.............#...#..............................................................................#.................................
..........#..........................#.......................................#....................#..#.......#.........#.....#....
......................#............#...............#.....#.................#...............................#...#....#.........##..
..........................................................................##.............................#...#..............#.....
#.#...#..................................................#..................................#..#...#..............................
...........................................#....#..............#.........................#........................................
...........#....................#.....................##........................#.....#...................................#....#..
..........#..........#.................................................#...............................................#..........
.....................................................................................#......#.....................#.#.............
........#.#..........................#...............................................................................#............
..............#..#.............#...........#......................#....#..#......#...................#............................
........#.......#.................#........#..........#.....................#.........................................#...........
..........................................................#...................................#.....#.........#......#...#........
..........#.....#.....................#............#............#.#......................#....#.##.............#...........#......
...#.#..#.......#......#........#...........................#....................#.....#.........#...........#.................#..
........#.......................................#............#.............#..................#......#......#...............#.#...
....................#.....#........#.........................#.................................................#................#.
.......#..#...........................................#......#..................#..#......................#..#....................
#.#........#....#...#.............................................#............................#.....................#............
#...................#...........#...................#..#................................................................#.#.......
............#...#.#...........#..#.....................................................................#........................#.
...#..............................................#..............#......#...#..............................................#......
................#...#..#..................................................................................................##...#..
.............................#...#..#........#.........#...#...................#............................................#.....
............#......................#.......................................................#.#....................................
...#......................#......#.#...........................................#.....#....#......................#...#............
.....#..#..........#.............................#..........................................#............#..................#.....
.................#...#.......................#..................................................#....................#............
............#..................................................#.....#..............#.......#.............................#.#....#
........#.............#..#.......................................................................................#.........#......
......#...................#..........................................................#................#................#.........#
..................#...........................#.....#....#.......................................#..#......................#......
....................#....................................#....................#........#............#........#....#...............
.........#..............#....#.............................#..#..........#........#.....................#.#.........#.............''';
